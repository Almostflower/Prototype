##########################################################
###コード規約
##########################################################
1. #Region ~ #endregionを必ず使うようにしてください。
※関数で区画分けなどを行ってどの処理をさせているか明確にわかるように
例：
class TestA 
{

#region	コンストラクター
	TestA(){}
#endregion

}

2.///<summary>　処理内容　///</summary>を関数や必要ならばクラスを記入する前に記載おねがいします。
例：

///<summary>
///オブジェクトの個数を数えて表示させている
///</summary>
void Update() 
{
	for(int i = 0 ;i < MaxObj; i ++)
	{
		Debug.Log(i);
	}
}

3. 関数に引数がある場合は <param name = ""> </param>を使うこと
例：
///<summary>
/// オブジェクトのゲッター
///</summary>
///<param name = "a"> オブジェクトの番号 </param>
void GetObj(int a)
{
	return Obj[a];
}

4.更新させるオブジェクトは必ずBaseMonoBehaviourを継承すること
(X) -> class A : MonoBehaviour {}
(o) -> class B : BaseMonoBehaviour {}

5.BaseMonoBehaviourを継承したものは必ず　Awakeも継承先で行うこと。

6.クラス名、関数名などの命名はプログラム開始直前にみんなで決めたいので、決めた後記載します。

##########################################################
###データー共有で気を付けてほしいこと。
##########################################################
1.コンフリクション（衝突）もしくはプッシュができない場合は、呼ぶこと。

2.マスターには管理者以外手をつけないこと。

3.担当された部分が決まった際は必ずBranchを切って、Branch切ったところへプッシュすること。

